buildscript {
    ext {

    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
    }
    dependencies {
    }
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

group 'com.huobi.sdk'
version = '1.0-SNAPSHOT'
archivesBaseName = 'huobi-client'
description = '火币SDK'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
}

dependencies {
    implementation("com.google.protobuf:protobuf-java:$protobufVersion")
    implementation("com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion")
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonVersion")
    implementation("com.google.guava:guava:$guavaVersion")
    implementation "com.google.code.gson:gson:${gsonVersion}"
    implementation "commons-io:commons-io:${commonsioVersion}"
    implementation "org.apache.commons:commons-lang3:${commonslang3Version}"
    implementation "commons-beanutils:commons-beanutils:${commonsbeanutilsVersion}"
    implementation group: 'com.alibaba', name: 'fastjson', version: "${fastjsonVersion}"
    implementation "commons-codec:commons-codec:${commonscodecVersion}"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"

    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    testImplementation("org.slf4j:slf4j-simple:$slf4jVersion")

    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"

    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.2'
    testCompile "org.mockito:mockito-core:3.0.0"
    testCompile('org.mockito:mockito-junit-jupiter:3.0.0')

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testImplementation("org.junit.jupiter:junit-jupiter-params:$junitVersion")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}


wrapper {
    gradleVersion = '5.6'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}

compileJava {
    options.compilerArgs << '-Xlint:deprecation' << '-Xlint:unchecked'
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

apply plugin: 'maven'
// 获取本地仓库路径
def localRepositoryPath = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
//打包至本地仓库配置
uploadArchives {
    repositories {
        //mavenDeployer 需要依赖 apply plugin: 'maven'
        mavenDeployer   {
            repository(url: localRepositoryPath)
            pom.project {
                name = 'huobi-client'       // 当前项目名称
                version = '1.0-SNAPSHOT'   //当前项目版本  0.0.1
                groupId = 'com.huobi.sdk'     //  当前项目组  com.xxx
            }
        }
    }
}
